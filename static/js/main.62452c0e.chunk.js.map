{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","key","name","job","onClick","removeCharacter","Table","Form","initialState","state","handleChange","event","target","value","setState","submitForm","handleSubmit","this","htmlFor","type","id","onChange","Component","App","characters","filter","character","i","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPA6BMA,G,MAAc,WAChB,OAEI,+BACA,4BACI,oCACA,uCAMNC,EAAY,SAACC,GAoBf,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACvC,OACI,wBAAIC,IAAKD,GACL,4BAAKD,EAAIG,MACT,4BAAKH,EAAII,KACT,4BACI,4BAAQC,QAAS,kBAAIT,EAAMU,gBAAgBL,KAA3C,eAMhB,OAAO,+BAAQJ,IAyBJU,EATD,SAAAX,GAAU,IACZE,EAAmCF,EAAnCE,cAAeQ,EAAoBV,EAApBU,gBACvB,OACI,+BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWR,cAAeA,EAAeQ,gBAAiBA,M,OC5CvDE,E,4MA9CXC,aAAe,CACXN,KAAM,GACNC,IAAI,I,EAGRM,MAAQ,EAAKD,a,EAEbE,aAAe,SAAAC,GAAU,IAAD,EACIA,EAAMC,OAAtBV,EADY,EACZA,KAAMW,EADM,EACNA,MAGd,EAAKC,SAAL,eACKZ,EAAOW,K,EAIhBE,WAAa,WACT,EAAKpB,MAAMqB,aAAa,EAAKP,OAC7B,EAAKK,SAAS,EAAKN,e,uDAIb,IAAD,EACiBS,KAAKR,MAAnBP,EADH,EACGA,KAAMC,EADT,EACSA,IACd,OACI,8BACI,2BAAOe,QAAQ,QAAf,QACA,2BACIC,KAAK,OACLjB,KAAK,OACLkB,GAAG,OACHP,MAAOX,EACPmB,SAAUJ,KAAKP,eACnB,2BAAOQ,QAAQ,OAAf,OACA,2BACIC,KAAK,OACLjB,KAAK,MACLkB,GAAG,MACHP,MAAOV,EACPkB,SAAUJ,KAAKP,eACnB,2BAAOS,KAAK,SAASN,MAAM,SAAST,QAASa,KAAKF,kB,GA1C/CO,aCmEJC,E,4MA5Dbd,MAAQ,CACNe,WAAa,I,EAgBfnB,gBAAkB,SAAAL,GAAU,IAClBwB,EAAe,EAAKf,MAApBe,WACR,EAAKV,SAAS,CACZU,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACxC,OAAOA,IAAI3B,Q,EAMjBgB,aAAe,SAAAU,GACb,EAAKZ,SAAS,CAACU,WAAW,GAAD,mBAAK,EAAKf,MAAMe,YAAhB,CAA2BE,O,uDAG7C,IAiBCF,EAAeP,KAAKR,MAApBe,WACR,OACE,yBAAKI,UAAU,aAGb,kBAAC,EAAD,CAAO/B,cAAe2B,EAAYnB,gBAAiBY,KAAKZ,kBACxD,kBAAC,EAAD,CAAMW,aAAcC,KAAKD,oB,GAxDfM,aCFlBO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.62452c0e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n/*\r\nclass Table extends Component{\r\n    render() {\r\n        return (\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Job</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Mudasir Hussain</td>\r\n                        <td>Programmer</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Iqrar Hussain</td>\r\n                        <td>Businessman</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n}\r\n*/\r\n\r\n//Simple component\r\nconst TableHeader = () => {\r\n    return (\r\n        \r\n        <thead>\r\n        <tr>\r\n            <th>Name</th>\r\n            <th>Job</th>\r\n        </tr>\r\n    </thead>\r\n    )\r\n}\r\n\r\nconst TableBody = (props) => {\r\n    /*\r\n    return (\r\n        \r\n        //1st part\r\n        <tbody>\r\n        <tr>\r\n            <td>Mudasir Hussain</td>\r\n            <td>Programmer</td>\r\n        </tr>\r\n        <tr>\r\n            <td>Iqrar Hussain</td>\r\n            <td>Businessman</td>\r\n        </tr>\r\n    </tbody>\r\n    \r\n    \r\n    )*/\r\n    \r\n    //accessing props data\r\n    const rows = props.characterData.map((row, index) => {\r\n        return (\r\n            <tr key={index}>\r\n                <td>{row.name}</td>\r\n                <td>{row.job}</td>\r\n                <td>\r\n                    <button onClick={()=>props.removeCharacter(index)}>Delete</button>\r\n                </td>\r\n\r\n            </tr>\r\n        )\r\n    })\r\n    return <tbody>{rows}</tbody>\r\n}\r\n/*\r\n//props\r\nclass Table extends Component{\r\n    render() {\r\n        const {characterData}=this.props\r\n        return (\r\n            <table>\r\n                <TableHeader />\r\n                <TableBody characterData={characterData}/>\r\n            </table>\r\n        )\r\n    }\r\n}*/\r\n//state with props\r\nconst Table = props => {\r\n    const { characterData, removeCharacter } = props;\r\n    return (\r\n        <table>\r\n            <TableHeader />\r\n            <TableBody characterData={characterData} removeCharacter={removeCharacter}/>\r\n        </table>\r\n    )\r\n}\r\nexport default Table;","import React, { Component } from 'react';\r\n\r\nclass Form extends Component{\r\n    \r\n    initialState = {\r\n        name: '',\r\n        job:''\r\n    }\r\n    \r\n    state = this.initialState;\r\n\r\n    handleChange = event => {\r\n        const { name, value } = event.target;\r\n\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n\r\n    submitForm = () => {\r\n        this.props.handleSubmit(this.state)\r\n        this.setState(this.initialState)\r\n    }\r\n\r\n\r\n    render() {\r\n        const { name, job } = this.state;\r\n        return (\r\n            <form >\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    value={name}\r\n                    onChange={this.handleChange} />\r\n                <label htmlFor=\"job\">Job</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"job\"\r\n                    id=\"job\"\r\n                    value={job}\r\n                    onChange={this.handleChange} />\r\n                <input type=\"button\" value=\"Submit\" onClick={this.submitForm}/>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;","import React, { Component } from 'react';\nimport './App.css';\n\nimport Table from './Table';\n\nimport Form from './Form';\n\nclass App extends Component{\n  //state defined\n  state = {\n    characters : [/*//I comment this because I'm going to add value at run time \n     {\n       name: 'Mudasir Hussain',\n       job:'Programmer'\n     },\n     {\n       name: 'Shujat Hussain',\n       job:'Officer'\n     },\n     {\n       name: 'Muzamil',\n       job: 'Officer'\n     },*/\n   ],\n  }\n  //function to update or delte character using state\n  removeCharacter = index => {\n    const { characters } = this.state\n    this.setState({\n      characters: characters.filter((character, i) => {\n        return i!==index\n      }),\n    })\n  }\n  \n  //function to submit form data\n  handleSubmit = character => {\n    this.setState({characters:[...this.state.characters,character]})\n  }\n\n  render() {\n    /*\n    const characters = [\n      {\n        name: 'Mudasir Hussain',\n        job:'Programmer'\n      },\n      {\n        name: 'Shujat Hussain',\n        job:'Officer'\n      },\n      {\n        name: 'Muzamil',\n        job: 'Officer'\n      }\n    ]*/\n    //state\n    const { characters } = this.state;\n    return (\n      <div className=\"container\">\n        {/*//this is just for props\n        <Table characterData={characters}/>*/}\n        <Table characterData={characters} removeCharacter={this.removeCharacter} />\n        <Form handleSubmit={this.handleSubmit}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}